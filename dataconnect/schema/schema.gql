# # Example schema for simple movie review app

# # Users
# # Suppose a user can leave reviews for movies
# # user  -> reviews is a one to many relationship,
# # movie -> reviews is a one to many relationship
# # movie <-> user is a many to many relationship
# type User @table {
#   id: String! @col(name: "user_auth")
#   username: String! @col(name: "username", dataType: "varchar(50)")
#   # The following are generated by the user: User! field in the Review table
#   # reviews_on_user 
#   # movies_via_Review
# }

# # Movies
# type Movie @table {
#   # The below parameter values are generated by default with @table, and can be edited manually.
#   # implies directive `@col(name: "movie_id")`, generating a column name
#   id: UUID! @default(expr: "uuidV4()")
#   title: String!
#   imageUrl: String!
#   genre: String
# }

# # Movie Metadata
# # Movie - MovieMetadata is a one-to-one relationship
# type MovieMetadata @table {
#   # @unique indicates a 1-1 relationship
#   movie: Movie! @unique 
#   # movieId: UUID <- this is created by the above reference
#   rating: Float
#   releaseYear: Int
#   description: String
# }

# # Reviews
# type Review @table(name: "Reviews", key: ["movie", "user"]) {
#   id: UUID! @default(expr: "uuidV4()")
#   user: User!
#   movie: Movie!
#   rating: Int
#   reviewText: String
#   reviewDate: Date! @default(expr: "request.time")
# }

# Quiz App Schema

# Users
type User @table {
  id: String! @col(name: "user_auth")
  email: String! @col(name: "email", dataType: "varchar(255)")
  displayName: String @col(name: "display_name", dataType: "varchar(255)")
  createdAt: Date! @default(expr: "request.time")
  lastLogin: Date
}

# Quiz Subjects
type Subject @table {
  id: UUID! @default(expr: "uuidV4()")
  name: String! @col(name: "name", dataType: "varchar(255)")
  iconName: String @col(name: "icon_name", dataType: "varchar(255)")
  createdAt: Date! @default(expr: "request.time")
}

# Questions
type Question @table {
  id: UUID! @default(expr: "uuidV4()")
  subject: Subject!
  questionText: String! @col(name: "question_text", dataType: "text")
  difficultyLevel: Int @col(name: "difficulty_level")
  timeLimit: Int @col(name: "time_limit")
  createdAt: Date! @default(expr: "request.time")
}

# Answers
type Answer @table {
  id: UUID! @default(expr: "uuidV4()")
  question: Question!
  answerText: String! @col(name: "answer_text", dataType: "text")
  isCorrect: Boolean! @col(name: "is_correct")
  createdAt: Date! @default(expr: "request.time")
}

# Quiz Attempts
type QuizAttempt @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  subject: Subject!
  startTime: Date! @default(expr: "request.time")
  endTime: Date
  totalTime: Int @col(name: "total_time")
  score: Int
  questionsAnswered: Int @col(name: "questions_answered")
  questionsCorrect: Int @col(name: "questions_correct")
}

# User Answers
type UserAnswer @table(key: ["quizAttempt", "question"]) {
  id: UUID! @default(expr: "uuidV4()")
  quizAttempt: QuizAttempt!
  question: Question!
  answer: Answer!
  timeTaken: Int @col(name: "time_taken")
  isCorrect: Boolean @col(name: "is_correct")
  createdAt: Date! @default(expr: "request.time")
}

# User Statistics
type UserStatistic @table(key: ["user", "subject"]) {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  subject: Subject!
  totalTimeSpent: Int @col(name: "total_time_spent")
  quizzesCompleted: Int @col(name: "quizzes_completed")
  averageScore: Float @col(name: "average_score")
  totalQuestionsAnswered: Int @col(name: "total_questions_answered")
  totalCorrectAnswers: Int @col(name: "total_correct_answers")
  lastUpdated: Date! @default(expr: "request.time")
}

